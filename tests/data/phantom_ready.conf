setup_t module_setup = setup_module_t {
  dir = "/usr/lib/phantom" #путь по которому лежат модули фантома
  list = { #описание всех модулей, которые используются в данном режиме
    io_benchmark #подключаем модуль клиента
    io_benchmark_method_stream #режим клиента
    io_benchmark_method_stream_ipv4 #поддержка ipv4
    io_benchmark_method_stream_source_log #использование исходного файла в качестве запросной части
    io_benchmark_method_stream_proto_http #подключение http протоколлера
  }
}

scheduler_t main_scheduler = scheduler_simple_t {
  threads = 6
  event_buf_size = 20
  timeout_prec = 1 # точность подаваемой нагрузки в миллисекундах. рекомендуется 1 мс.
}

io_t benchmark_io = io_benchmark_t {
  method_t stream_method = method_stream_ipv4_t {
    logger_t brief_logger = logger_brief_t {
      filename = "ready_conf_phout.txt" #настраиваем файл логгинга, в который будут записываться результаты теста
      time_format = unix
      scheduler = main_scheduler
    }

    loggers = { brief_logger }

    source_t source_log = source_log_t {
      filename = "data/ammo.stpd" # конфигурирование входящей ленты запросов
    }

    proto_t http_proto = proto_http_t { }
    proto = http_proto
    address = 127.0.0.1 #настройка сервера. IP
    port = 80 # PORT
    timeout = 1s
    source = source_log
  }

  times_t simple_times = times_simple_t {
    max = 1s
    min = 10
    steps = 20
  }

  times_t list_times = times_list_t {
    values = {1 2 3 4 5 6 7 8 9 10 20 30 40 50 60 70 80 90 100 150 200 250 300 350 400 450 500 600 650 700 750 800 850 900 950 1s 1500 2s 2500 3s 3500 4s 4500 5s 5500 6s 6500 7s 7500 8s 8500 9s 9500 10s 11s} #настройка разбиений интервалов 
  }

  instances = 300
  method = stream_method
  times = list_times
  human_readable_report = false
  scheduler = main_scheduler
}